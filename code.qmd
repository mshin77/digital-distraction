---
title: 'Preventing Digital Distractions in Secondary Classrooms: A Quasi-Experimental Study'
date: "`r Sys.Date()`"
format:
  html:
    code-fold: true
    code-tools: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = FALSE, error = FALSE, message = FALSE)
```

The website contains outputs and code used to analyze numeric and ordinal data in Park et al. (in press). Reproducible materials are also posted at the at the [Center for Open Science](https://doi.org/10.17605/OSF.IO/JWVU4) and [Github](https://github.com/mshin77/digital-distraction). 

Park, J., Paxtle-Granjeno, J., Ok, M. W., Shin, M., & Wilson, E. (in press). Preventing digital distraction in secondary classrooms: A quasi-experimental study. *Computers & Education* 

::: panel-tabset

## Set-Up

```{r}
#| code-fold: false

suppressPackageStartupMessages({
  library(readxl)
  library(gtsummary)
  library(reshape2)
  library(tidyr)
  library(officer)
  library(flextable)
  library(ggeffects)
  library(ggplot2)
  library(dplyr)
  library(ordinal)
  library(VGAM)
  library(texreg)
  library(psych)
})

load("data/digital_distraction_data.RData")
```

## Frequency Table 

```{r, eval=FALSE}
selected_data <- data %>% select(student, group, time, AI1:ER4)

long_data <- melt(selected_data, id.vars = c('student', 'group', 'time'), variable.name = 'question', value.name = 'response')

table <- long_data %>%
  mutate(time = case_when(
    time == "0" ~ "Pre-test",
    time == "1" ~ "Post-test"
    )) %>%
  mutate(time = factor(time, levels = c("Pre-test", "Post-test"))) %>% 
  mutate(group = case_when(
    group == "0" ~ "Control",
    group == "1" ~ "Treatment"
  )) %>%
  group_by(question, group, time, response) %>%
  summarise(Count = n(), .groups = 'drop') %>%
  group_by(question, group, time) %>%
  mutate(Percentage = Count / sum(Count) * 100) %>%
  mutate(Freq_Percent = paste0(Count, " (", round(Percentage, 1), "%)")) %>%
  select(-Count, -Percentage) %>%
  pivot_wider(names_from = response, values_from = Freq_Percent, values_fill = list(Freq_Percent = "0 (0%)")) %>%
  ungroup()

table_flex <- table %>%
  flextable() %>%
  merge_v(j = ~ question) %>%
  merge_v(j = ~ group) %>%
  theme_vanilla() %>%
  autofit()
```

```{r}
#| code-fold: false
table_flex
```


## Estimated Minutes

#### Preprocess data

```{r, eval=FALSE}
data <- data %>%
  mutate(D3_cat = case_when(
    D3 == "Less than 10 minutes" ~ "1",
    D3 == "10-20 minutes" ~ "2",
    D3 == "20-30 minutes" ~ "3",
    D3 == "30-40 minutes" ~ "4",
    D3 == "More than 40 minutes" ~ "5"
    ))

data <- data %>% mutate(across(c(D3_cat, AI1:ER4), as.factor))
```

#### Estimated Minutes of Digital Distractions

```{r, eval=FALSE}
main.D3_cat <- clmm(D3_cat ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
reverse_thresholds <- function(data) {
  
  sum <- summary(data)
  
  cf <- as.data.frame(sum$coefficients)
  
  cf[1:4, 1] <- cf[1:4, 1] * -1
  cf[1:4, 3] <- cf[1:4, 3] * -1
  
  rownames(cf)[1:4] <- c("intercept (Y>1)", "intercept (Y>2)", "intercept (Y>3)", "intercept (Y>4)")
  
  return(cf)
}

cf <- reverse_thresholds(main.D3_cat)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.D3_cat, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

## AI

#### Attention Impulsiveness (AI)

**AI1**

```{r, eval=FALSE}
main.AI1 <- clmm(AI1 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.AI1)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.AI1, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**AI2**

```{r, eval=FALSE}
main.AI2 <- clmm(AI2 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.AI2)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.AI2, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**AI3**

```{r, eval=FALSE}
main.AI3 <- clmm(AI3 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.AI3)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.AI3, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**AI4**

```{r, eval=FALSE}
main.AI4 <- clmm(AI4 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.AI4)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.AI4, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**AI5**

```{r, eval=FALSE}
main.AI5 <- clmm(AI5 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.AI5)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.AI5, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```


## OV

#### Online Vigilance (OV)

**OV1**

```{r, eval=FALSE}
main.OV1 <- clmm(OV1 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.OV1)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.OV1, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**OV2**

```{r, eval=FALSE}
main.OV2 <- clmm(OV2 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.OV2)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.OV2, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**OV3**

```{r, eval=FALSE}
main.OV3 <- clmm(OV3 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.OV3)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.OV3, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```


## MT

#### Multitasking (MT)

**MT1**

```{r, eval=FALSE}
main.MT1 <- clmm(MT1 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.MT1)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.MT1, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**MT2**

```{r, eval=FALSE}
main.MT2 <- clmm(MT2 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.MT2)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.MT2, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**MT3**

```{r, eval=FALSE}
main.MT3 <- clmm(MT3 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.MT3)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.MT3, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**MT4**

```{r, eval=FALSE}
main.MT4 <- clmm(MT4 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.MT4)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.MT4, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```


## ER

#### Emotion Regulation (ER)

**ER1**

```{r, eval=FALSE}
main.ER1 <- clmm(ER1 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.ER1)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.ER1, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**ER2**

```{r, eval=FALSE}
main.ER2 <- clmm(ER2 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.ER2)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.ER2, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**ER3**

```{r, eval=FALSE}
main.ER3 <- clmm(ER3 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.ER3)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.ER3, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**ER4**

```{r, eval=FALSE}
main.ER4 <- clmm(ER4 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7) 
```

```{r}
cf <- reverse_thresholds(main.ER4)

cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 2))

ggpredict(main.ER4, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```


:::
