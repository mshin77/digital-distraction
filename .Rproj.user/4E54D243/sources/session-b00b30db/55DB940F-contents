---
title: ''
format:
  html:
    code-fold: false
    code-tools: true
---

::: panel-tabset

## Set-Up

```{r}
suppressPackageStartupMessages({
  library(readxl)
  library(gtsummary)
  library(officer)
  library(flextable)
  library(ggeffects)
  library(ggplot2)
  library(dplyr)
  library(ordinal)
  library(texreg)
})

load("data/digital_distraction_data.RData")
```

## Demographic Profiles

```{r, eval=FALSE}
data$group <- as.factor(data$group)

demo_tbl <- data %>%
  mutate(group = case_when(
    group == "1" ~ "Treatment",
    group == "0" ~ "Control"
  )) %>%
    rename(
    grade = D1,
    gender = D2, 
    non_academic = D3,
    device = D4_multi,
    most_distracted = D5,
    distraction_source = D6, 
    teacher_authority = D7
  ) %>%
  filter(time == "1") %>%
  dplyr::select(group, period, grade, gender, non_academic, device, most_distracted, distraction_source, teacher_authority) %>%
  tbl_summary(by = group,
              percent = "column") 

demo_tbl_ft <- as_flex_table(demo_tbl)
```

```{r}
demo_tbl_ft 
```

```{r, eval=FALSE}
data <- data %>% mutate(across(AI1:ER4, as.factor))
```

## AI

#### Attention Impulsiveness (AI)

**AI1**

```{r, eval=FALSE}
main.AI1 <- clmm(AI1 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7)
```


```{r}
sum <- summary(main.AI1)
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.AI1, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**AI2**

```{r, eval=FALSE}
main.AI2 <- clmm(AI2 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.AI2)
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.AI2, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**AI3**

```{r, eval=FALSE}
main.AI3 <- clmm(AI3 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.AI3)
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.AI3, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**AI4**

```{r, eval=FALSE}
main.AI4 <- clmm(AI4 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.AI4)
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.AI4, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**AI5**

```{r, eval=FALSE}
main.AI5 <- clmm(AI5 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.AI5)
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.AI5, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

```{r}
screenreg(list(main.AI1, main.AI2, main.AI3, main.AI4, main.AI5), 
          custom.model.names = c("AI 1", "AI 2", "AI 3", "AI 4", "AI 5"))
```

## OV

#### Online Vigilance (OV)

**OV1**

```{r, eval=FALSE}
main.OV1 <- clmm(OV1 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.OV1)
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.OV1, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**OV2**

```{r, eval=FALSE}
main.OV2 <- clmm(OV2 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.OV2 )
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.OV2, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**OV3**

```{r, eval=FALSE}
main.OV3 <- clmm(OV3 ~ group + time + group:time +
                    (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.OV3 )
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.OV3, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

```{r}
screenreg(list(main.OV1, main.OV2, main.OV3), 
          custom.model.names = c("OV 1", "OV 2", "OV 3"))
```
## MT

#### Multitasking (MT)

**MT1**

```{r, eval=FALSE}
main.MT1 <- clmm(MT1 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.MT1)
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.MT1, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**MT2**

```{r, eval=FALSE}
main.MT2 <- clmm(MT2 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.MT2)
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.MT2, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**MT3**

```{r, eval=FALSE}
main.MT3 <- clmm(MT3 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.MT3)
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.MT3, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**MT4**

```{r, eval=FALSE}
main.MT4 <- clmm(MT4 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.MT4)
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.MT4, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

```{r}
screenreg(list(main.MT1, main.MT2, main.MT3, main.MT4), 
          custom.model.names = c("MT 1", "MT 2", "MT 3", "MT 4"))
```

## ER

#### Emotion Regulation (ER)

**ER1**

```{r, eval=FALSE}
main.ER1 <- clmm(ER1 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.ER1)
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.ER1, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**ER2**

```{r, eval=FALSE}
main.ER2 <- clmm(ER2 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.ER2)
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.ER2, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**ER3**

```{r, eval=FALSE}
main.ER3 <- clmm(ER3 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.ER3)
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.ER3, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

**ER4**

```{r, eval=FALSE}
main.ER4 <- clmm(ER4 ~ group + time + group:time +
                   (1 | student), data = data, Hess=TRUE, nAGQ=7)
```

```{r}
sum <- summary(main.ER4)
cf <- sum$coefficients %>% as.data.frame() 

cf[1:4, 1] <- cf[1:4, 1]*-1
cf[1:4, 3] <- cf[1:4, 3]*-1
rownames(cf)[1:4] <- c("rating > 4", "rating > 3", "rating > 2", "rating > 1")
cf %>% mutate(odd_ratio = exp(Estimate)) %>% 
  mutate_if(is.numeric, ~ round(., 3))

ggpredict(main.ER4, terms = c("time", "group")) %>% plot() + 
  scale_x_continuous(breaks = c(0, 1)) 
```

```{r}
screenreg(list(main.ER1, main.ER2, main.ER3, main.ER4), 
          custom.model.names = c("ER 1", "ER 2", "ER 3", "ER 4"))
```

:::
